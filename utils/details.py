# utils/details.py
import streamlit as st
import pandas as pd
import os
from utils.member import load_members   # ƒë·ªÉ l·∫•y DS h·ªôi vi√™n
from utils.gsheets import load_sheet


def load_matches():
    # ƒê·ªçc t·ª´ Google Sheets
    df = load_sheet("matches")
    if df.empty:
        df = pd.DataFrame(columns=["Ng√†y","C·∫∑p thua","Ghi ch√∫","Gi√°"])

    # Chu·∫©n h√≥a d·ªØ li·ªáu
    df = df.replace("nan", "", regex=False).fillna("")
    df["Ng√†y"] = df["Ng√†y"].astype(str).str.strip()
    df["C·∫∑p thua"] = df["C·∫∑p thua"].astype(str).str.strip()
    df["Ghi ch√∫"] = df["Ghi ch√∫"].astype(str).str.strip()

    if "Gi√°" not in df.columns:
        df["Gi√°"] = -1
    df["Gi√°"] = df["Gi√°"].fillna(-1).astype(int)
    return df

def get_detail_df(df_matches, month, year):
    if df_matches.empty:
        return pd.DataFrame()

    # Load DS h·ªôi vi√™n
    members_df = load_members()
    gia_map = dict(zip(members_df["T√™n"], members_df["Gi√° thua"]))

    # Chuy·ªÉn sang datetime ƒë·ªÉ l·ªçc th√°ng/nƒÉm
    df_matches["Ng√†y_dt"] = pd.to_datetime(df_matches["Ng√†y"], format="%d/%m/%Y", errors="coerce")
    df_filtered = df_matches[
        (df_matches["Ng√†y_dt"].dt.month == month) &
        (df_matches["Ng√†y_dt"].dt.year == year)
    ]
    if df_filtered.empty:
        return pd.DataFrame()

    records = []
    for _, row in df_filtered.iterrows():
        ngay = row["Ng√†y"]
        pair = row["C·∫∑p thua"]
        ghi_chu = row.get("Ghi ch√∫", "")
        gia = int(row.get("Gi√°", -1))

        # T√°ch t√™n trong c·∫∑p thua
        names = [n.strip() for n in pair.split() if n.strip()]
        for name in names:
            # N·∫øu kh√¥ng nh·∫≠p gi√° override ‚Üí l·∫•y theo DS h·ªôi vi√™n
            if gia <= 0:
                fee = gia_map.get(name, 5000)  # v√£ng lai = 5000
            else:
                fee = gia
            records.append({
                "Ng√†y": ngay,
                "T√™n": name,
                "S·ªë tr·∫≠n thua": 1,
                "Gi√°": fee,
                "Ghi ch√∫": ghi_chu
            })

    df_detail = pd.DataFrame(records)
    df_detail = df_detail.groupby(["Ng√†y","T√™n","Ghi ch√∫"], as_index=False).agg({
        "S·ªë tr·∫≠n thua": "sum",
        "Gi√°": "first"
    })

    # üëâ Th√™m c·ªôt T·ªïng ti·ªÅn
    df_detail["T·ªïng ti·ªÅn"] = df_detail["S·ªë tr·∫≠n thua"] * df_detail["Gi√°"]

    return df_detail


def show_detail_page():
    st.subheader("B·∫£ng chi ti·∫øt")

    df_matches = load_matches()
    if df_matches.empty:
        st.info("Ch∆∞a c√≥ d·ªØ li·ªáu tr·∫≠n thua n√†o.")
        return

    months = list(range(1,13))
    month = st.selectbox("Ch·ªçn th√°ng", months, index=pd.Timestamp.now().month-1)
    years = sorted(df_matches["Ng√†y"].apply(lambda x: int(x.split("/")[2].strip())).unique())
    year = st.selectbox("Ch·ªçn nƒÉm", years, index=0)

    df_detail = get_detail_df(df_matches, month, year)
    if df_detail.empty:
        st.info(f"Kh√¥ng c√≥ d·ªØ li·ªáu cho {month}/{year}.")
        return

    st.dataframe(df_detail, use_container_width=True)
